package org.example.java5jpa.controller;import org.example.java5jpa.entity.User;import org.example.java5jpa.repository.UserRepository;import org.example.java5jpa.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.HashMap;import java.util.Map;@RestController@RequestMapping("/user-api")public class UserApi {    @Autowired    public UserService userService;    @GetMapping("/getAllUser")    public ResponseEntity<?> doGetAllUser() {        Map<String, Object> result = new HashMap<>();        try {            result = new HashMap<>();            result.put("success", true);            result.put("status", "Call Api success");            result.put("data", userService.findAllUser());        } catch (Exception e) {            result.put("error", false);            result.put("status", "Call Api error");            result.put("data", null);            System.out.println(e);        }        return ResponseEntity.ok(result);    }    @PostMapping("/postSaveUser")    public ResponseEntity<?> doPostSaveUser(@RequestBody User user) {        Map<String, Object> result = new HashMap<>();        try {            result = new HashMap<>();            result.put("success", true);            result.put("status", "Call Api success");            result.put("data", userService.doSaveUser(user));        } catch (Exception e) {            result.put("error", false);            result.put("status", "Call Api error");            result.put("data", null);            System.out.println(e);        }        return ResponseEntity.ok(result);    }    @GetMapping("/getUserByUsername/{username}")    public ResponseEntity<?> doGetUserByUsername(@PathVariable String username) {        Map<String, Object> result = new HashMap<>();        try {            result.put("success", true);            result.put("status", "Call Api success");            result.put("data", userService.findByUsername(username));        } catch (Exception e) {            result.put("error", false);            result.put("status", "Call Api error");            result.put("data", null);            System.out.println(e);        }        return ResponseEntity.ok(result);    }    @DeleteMapping("/deleteUserById/{id}")    public ResponseEntity<?> doDeleteUserById(@PathVariable int id) {        Map<String, Object> result = new HashMap<>();        try {            result.put("success", true);            result.put("status", "Call Api success");            userService.doDeleteUserById(id);        } catch (Exception e) {            result.put("error", false);            result.put("status", "Call Api error");            result.put("data", null);            System.out.println(e);        }        return ResponseEntity.ok(result);    }}